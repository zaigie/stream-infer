[tool.poetry]
name = "stream_infer"
version = "0.4.1"
description = "Video streaming inference framework, integrating image algorithms and models for real-time/offline video structuring"
authors = ["ZaiGie <jokerwho@yeah.net>"]
maintainers = ["ZaiGie <jokerwho@yeah.net>"]
readme = "README.md"
license = "Apache-2.0"
packages = [{include = "stream_infer"}]
homepage = "https://github.com/zaigie/stream-infer"
repository = "https://github.com/zaigie/stream-infer"
documentation = "https://github.com/zaigie/stream-infer/blob/main/README.md"
keywords = ["machine-learning", "deep-learning", "vision", "ML", "DL", "AI", "streaming framework", "DeepStream"]

classifiers=[
    'Development Status :: 4 - Beta',
    'Intended Audience :: Developers',
    'Intended Audience :: Education',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: Apache Software License',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3 :: Only',
    'Topic :: Software Development',
    'Topic :: Scientific/Engineering',
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Recognition",
    'Typing :: Typed',
    'Operating System :: Microsoft :: Windows',
    'Operating System :: POSIX :: Linux',
    'Operating System :: MacOS'
]

[tool.poetry.dependencies]
python = ">=3.8,<3.12.0"
numpy = ">=1.21.2"
opencv-python = { version = ">=4.5.5.64,<=4.8.1.78", optional = true }
opencv-python-headless = ">=4.5.5.64,<=4.8.1.78"
av = ">= 11.0.0"
loguru = ">=0.6.0"
streamlit = { version = ">=1.29.0", optional = true }
tqdm = ">=4.62.3,<=4.66.1"

[tool.poetry.extras]
desktop = ["opencv-python"]
server = ["streamlit"]

[tool.poetry.group.dev.dependencies]
twine = "^4.0.2"
pytest = "^7.2.2"
wheel = ">=0.40,<0.43"
build = ">=0.10,<1.1"

[tool.setuptools]
include-package-data = false

[tool.setuptools.packages.find]
exclude = ["docs*", "test*","examples*"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"